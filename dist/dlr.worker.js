/*!
* Dynamsoft JavaScript Library
* @product Dynamsoft Label Recognizer JS Edition
* @website http://www.dynamsoft.com
* @copyright Copyright 2024, Dynamsoft Corporation
* @author Dynamsoft
* @version 3.0.30
* @fileoverview Dynamsoft JavaScript Library for Barcode Reader
* More info on dlr JS: https://www.dynamsoft.com/label-recognition/docs/web/programming/javascript/
*/
!function(){"use strict";let e={};const t=self;t.dlrWorkerVersion="3.0.30";const o=t.checkAndAutoLoadCaffeModel=async(t,o)=>{if(!e[t]){let r;o?"@engineResourcePath"===o&&(o=engineResourcePaths.dlr):o="",postMessage({type:"event",id:-1,body:{loaded:0,total:0,tag:"starting",resourcesPath:o+t+".data"}}),e[t]=(async()=>{try{let a,s,n;const d=new TextDecoder,l=o+t+".data",f=await new Promise(((e,t)=>{const o=new XMLHttpRequest;o.responseType="arraybuffer",o.onload=()=>{e({ok:!0,arrayBuffer:()=>o.response})},o.onerror=o.timeout=o.onabort=()=>{t({ok:!1,status:o.status})};let a=Date.now();o.onprogress=e=>{if(r=e.total,e.lengthComputable){const t=Date.now();a+500<t&&(postMessage({type:"event",id:-1,body:{loaded:e.loaded,total:e.total,tag:"in progress",resourcesPath:l}}),a=t)}},o.open("GET",l,!0),o.send()}));if(!f.ok)throw new Error(`Network error. Status: ${f.status}.`);a=await f.arrayBuffer();{if(!d.decode(new Uint8Array(a,0,8)).startsWith("DLR_MDL"))throw new Error("Model data type incorrect.");let e=0;const t=new Uint8Array(a,8,8);for(let o=7;o>=0;--o)e=256*e+t[o];const o=d.decode(new Uint8Array(a,16,e));s=JSON.parse(o),n=16+e}let c=e=>{const t=s[e];if(!t)throw new Error(`File name '${e}' not found.`);return new Uint8Array(a,n+t[0],t[1])},i=JSON.parse(d.decode(c(t+".config.json")));const p=i.mainModel,u=i.assistModels,m=i.modelFilter;{const e=c(p+".prototxt"),o=c(p+".txt"),r=c(p+".caffemodel");ep(),wasmImports.emscripten_bind_DlrWasm_appendCaffeModelBuffer_7(es(t),setBufferIntoWasm(e,0),e.length,setBufferIntoWasm(o,1),o.length,setBufferIntoWasm(r,2),r.length)}if(u)for(let e of u){const o=t+e,r=p+e,a=c(r+".prototxt"),s=c(r+".txt"),n=c(r+".caffemodel");wasmImports.emscripten_bind_DlrWasm_appendCaffeModelBuffer_7(o,a,a.length,s,s.length,n,n.length)}if(m){const e=c(m+".txt");wasmImports.emscripten_bind_DlrWasm_appendModelFilterFileBuffer_3(t,e,e.length)}return e[t]=!0,postMessage({type:"event",id:-1,body:{loaded:r,total:r,tag:"completed",resourcesPath:o+t+".data"}}),!0}catch(o){throw delete e[t],o}})()}await e[t]};Object.assign(mapController,{dlr_appendCaffeModelBuffer:async(e,t)=>{try{await o(e.dataName,e.dataPath),handleTaskRes(t,{success:!0})}catch(e){return void handleTaskErr(t,e)}}})}();
